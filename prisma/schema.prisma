datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

enum Role {
  GUEST
  TEACHER
  MODERATOR
  ADMIN
}

model User {
  id String @id @default(uuid())
  username String @unique
  email String @unique
  phone String @unique
  role Role? @default(GUEST)
  passwordHash String @db.Text
  emailVerified Int @default(0)
  emailToken String?
  emailExpired String?
  profile Profile?

  templates Template[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id String  @id @default(uuid())
  avatarUrl String? @db.Text
  bio String? @db.Text

  userId String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  address Address?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id String @id @default(uuid())

  profileId String @unique
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  provinceId String? @unique
  province Province? @relation(fields: [provinceId], references: [id]) 
  districtId String? @unique
  district District? @relation(fields: [districtId], references: [id]) 
  wardId String? @unique
  ward Ward? @relation(fields: [wardId], references: [id]) 
  street String? @db.Text

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Province {
  id String @id() @default(uuid()) @unique
  name String 
  groupId String
  address Address?
}

model District {
  id String @id() @default(uuid()) @unique
  name String 
  groupId String
  address Address?
}

model Ward {
  id String @id() @default(uuid()) @unique
  name String 
  groupId String
  address Address?
}

model Template {
  id String @id @default(uuid())
  code String @unique
  name String
  content String @db.Text

  userId String?
  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  categoryId String?
  category Category? @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(uuid())
  code String @unique
  name String
  group String @default("")

  templates Template[]
}